services:
  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: bot
    restart: unless-stopped
    volumes:
      - ./upload/:/app/upload/
    networks:
      - assistant_bridge
    depends_on:
      - db
      - migrator

  db:
    image: postgres:17
    container_name: db
    env_file: db.env
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - assistant_bridge

  admin-backend:
    build:
      context: .
      dockerfile: admin/backend/Dockerfile
    container_name: admin-backend
    restart: unless-stopped
    ports:
      - "9090:8080"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./upload/:/app/upload/
    networks:
      - assistant_bridge
    depends_on:
      - db
      - migrator

  admin-frontend:
    build:
      context: admin/frontend
      dockerfile: Dockerfile
    container_name: admin-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./admin/frontend/nginx.conf:/etc/nginx/nginx.conf:ro

  worker-manager:
    build:
      context: .
      dockerfile: worker-manager/Dockerfile
    container_name: worker-manager
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./worker-manager/infrastructure/docker/worker-settings:/app/infrastructure/docker/worker-settings
    networks:
      - assistant_bridge
    depends_on:
      - db
      - migrator

  #  worker:
  #    build:
  #      context: .
  #      dockerfile: worker/Dockerfile
  #    container_name: worker
  #    restart: no
  #    volumes:
  #      - ./upload/:/app/upload/
  #    networks:
  #      - assistant_bridge

  posts:
    build:
      context: .
      dockerfile: posts-service/Dockerfile
    container_name: posts-service
    restart: unless-stopped
    volumes:
      - ./posts-service/jobs.sqlite:/app/jobs.sqlite
    networks:
      - assistant_bridge
    depends_on:
      - db
      - migrator

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    command: -config.file=/etc/loki/config.yaml
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki/config.yaml:/etc/loki/config.yaml:ro
      - ./data/loki:/loki
    networks:
      - assistant_bridge

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    command: -config.file=/etc/promtail/promtail.yaml
    restart: unless-stopped
    volumes:
      - ./observability/promtail/promtail.yaml:/etc/promtail/promtail.yaml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/promtail:/run/promtail
    depends_on:
      - loki
    networks:
      - assistant_bridge

  grafana:
    image: grafana/grafana:10.4.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - assistant_bridge

  watcher:
    build:
      context: .
      dockerfile: watcher/Dockerfile
    container_name: watcher
    restart: unless-stopped
    networks:
      - assistant_bridge
    depends_on:
      - db
      - migrator

  migrator:
    build:
      context: .
      dockerfile: migrator/Dockerfile
    container_name: migrator
    restart: no
    volumes:
      - ./migrator/migrations/:/app/migrations/
    depends_on:
      - db
    networks:
      - assistant_bridge

volumes:
  postgres_data:


networks:
  assistant_bridge:
    external: true
    name: assistant_bridge
