"""init

Revision ID: 0b9fd1f0f1e4
Revises: 
Create Date: 2025-06-20 00:52:18.111040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b9fd1f0f1e4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('PENDING', 'IN_PROGRESS', 'SENT', 'FAILED', name='workermessagestatus').create(op.get_bind())
    sa.Enum('POST', 'STORY', name='workermessagetype').create(op.get_bind())
    sa.Enum('PLANNED', 'IN_PROGRESS', 'PUBLISHED', 'FAILED', 'CANCELLED', name='publishstoryrequeststatus').create(op.get_bind())
    sa.Enum('PLANNED', 'IN_PROGRESS', 'SENT', 'FAILED', 'CANCELLED', name='sendpostrequeststatus').create(op.get_bind())
    sa.Enum('PENDING', 'SCHEDULED', 'SCHEDULING', 'IN_PROGRESS', 'POSTED', 'FAILED', 'CANCELED', name='publicationstatus').create(op.get_bind())
    sa.Enum('EVERYDAY', 'SINGLE', name='scheduledtype').create(op.get_bind())
    sa.Enum('MANAGER', 'ADMIN', 'PUBLICATIONS_MANAGER', name='userrole').create(op.get_bind())
    op.create_table('chats',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('invite_link', sa.String(), nullable=True),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chat_id')
    )
    op.create_table('emojis',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('custom_emoji_id', sa.String(), nullable=False),
    sa.Column('img_url', sa.String(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('posts',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('image_path', sa.String(), nullable=True),
    sa.Column('html', sa.String(), nullable=True),
    sa.Column('entities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('proxies',
    sa.Column('proxy_string', sa.String(), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('is_deprecated', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('proxy_string')
    )
    op.create_table('stories',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('telegram_username', sa.String(), nullable=True),
    sa.Column('telegram_first_name', sa.String(), nullable=True),
    sa.Column('telegram_last_name', sa.String(), nullable=True),
    sa.Column('telegram_language_code', sa.String(), nullable=True),
    sa.Column('role', postgresql.ENUM('MANAGER', 'ADMIN', 'PUBLICATIONS_MANAGER', name='userrole', create_type=False), nullable=False),
    sa.Column('session_string', sa.String(), nullable=True),
    sa.Column('proxy_id', sa.UUID(), nullable=True),
    sa.Column('assistant_enabled', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['proxy_id'], ['proxies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('proxy_id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('posts_to_publish',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('creator_id', sa.UUID(), nullable=True),
    sa.Column('responsible_manager_id', sa.UUID(), nullable=True),
    sa.Column('scheduled_type', postgresql.ENUM('EVERYDAY', 'SINGLE', name='scheduledtype', create_type=False), nullable=False),
    sa.Column('scheduled_date', sa.Date(), nullable=True),
    sa.Column('scheduled_time', sa.Time(), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'SCHEDULED', 'SCHEDULING', 'IN_PROGRESS', 'POSTED', 'FAILED', 'CANCELED', name='publicationstatus', create_type=False), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['responsible_manager_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stories_to_publish',
    sa.Column('story_id', sa.UUID(), nullable=False),
    sa.Column('manager_id', sa.UUID(), nullable=False),
    sa.Column('scheduled_type', postgresql.ENUM('EVERYDAY', 'SINGLE', name='scheduledtype', create_type=False), nullable=False),
    sa.Column('scheduled_date', sa.Date(), nullable=False),
    sa.Column('scheduled_time', sa.Time(), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'SCHEDULED', 'SCHEDULING', 'IN_PROGRESS', 'POSTED', 'FAILED', 'CANCELED', name='publicationstatus', create_type=False), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('worker_messages',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('chat_id', sa.BigInteger(), nullable=False),
    sa.Column('type', postgresql.ENUM('POST', 'STORY', name='workermessagetype', create_type=False), nullable=False),
    sa.Column('text', sa.String(), nullable=True),
    sa.Column('entities', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('media_path', sa.String(), nullable=True),
    sa.Column('request_id', sa.UUID(), nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'IN_PROGRESS', 'SENT', 'FAILED', name='workermessagestatus', create_type=False), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_to_publish_chat_association',
    sa.Column('post_to_publish_id', sa.UUID(), nullable=False),
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['post_to_publish_id'], ['posts_to_publish.id'], ),
    sa.PrimaryKeyConstraint('post_to_publish_id', 'chat_id')
    )
    op.create_table('publish_story_requests',
    sa.Column('story_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('publication_id', sa.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('PLANNED', 'IN_PROGRESS', 'PUBLISHED', 'FAILED', 'CANCELLED', name='publishstoryrequeststatus', create_type=False), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['publication_id'], ['stories_to_publish.id'], ),
    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('send_post_requests',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('publication_id', sa.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('PLANNED', 'IN_PROGRESS', 'SENT', 'FAILED', 'CANCELLED', name='sendpostrequeststatus', create_type=False), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['publication_id'], ['posts_to_publish.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('send_post_requests')
    op.drop_table('publish_story_requests')
    op.drop_table('post_to_publish_chat_association')
    op.drop_table('worker_messages')
    op.drop_table('stories_to_publish')
    op.drop_table('posts_to_publish')
    op.drop_table('users')
    op.drop_table('stories')
    op.drop_table('proxies')
    op.drop_table('posts')
    op.drop_table('emojis')
    op.drop_table('chats')
    sa.Enum('MANAGER', 'ADMIN', 'PUBLICATIONS_MANAGER', name='userrole').drop(op.get_bind())
    sa.Enum('EVERYDAY', 'SINGLE', name='scheduledtype').drop(op.get_bind())
    sa.Enum('PENDING', 'SCHEDULED', 'SCHEDULING', 'IN_PROGRESS', 'POSTED', 'FAILED', 'CANCELED', name='publicationstatus').drop(op.get_bind())
    sa.Enum('PLANNED', 'IN_PROGRESS', 'SENT', 'FAILED', 'CANCELLED', name='sendpostrequeststatus').drop(op.get_bind())
    sa.Enum('PLANNED', 'IN_PROGRESS', 'PUBLISHED', 'FAILED', 'CANCELLED', name='publishstoryrequeststatus').drop(op.get_bind())
    sa.Enum('POST', 'STORY', name='workermessagetype').drop(op.get_bind())
    sa.Enum('PENDING', 'IN_PROGRESS', 'SENT', 'FAILED', name='workermessagestatus').drop(op.get_bind())
    # ### end Alembic commands ###
